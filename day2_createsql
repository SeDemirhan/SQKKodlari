/*======================= CONSTRAINTS - KISITLAMALAR ======================================
               
    NOT NULL - Bir Sütunun  NULL içermemesini garanti eder. 

    UNIQUE - Bir sütundaki tüm deðerlerin BENZERSÝZ olmasýný garanti eder.  

    PRIMARY KEY - Bir sütünün NULL içermemesini ve sütundaki verilerin 
                  BENZERSÝZ olmasýný garanti eder.(NOT NULL ve UNIQUE birleþimi gibi)

    FOREIGN KEY - Baþka bir tablodaki Primary Key’i referans göstermek için kullanýlýr. 
                  Böylelikle, tablolar arasýnda iliþki kurulmuþ olur. 

    CHECK - Bir sutundaki tüm verilerin belirlenen özel bir þartý saðlamasýný garanti eder. 
    soldan tablo silerken tablonun kapalý olmasý lazým*/




--Örnek1- NOT NULL
--ogrenciler tabloso olusturalim ve id field ini bos birakilamaz yapalim

CREATE TABLE ogrenciler(
id char(4) not null,
isim VARCHAR(50),
not_ort number(5,2),  
kayit_tarihi date


);

INSERT INTO ogrenciler VALUES ('1234','Hasan',75.25,'14-01-2020');
INSERT INTO ogrenciler VALUES ('1234','Ayse',null,null);
INSERT INTO ogrenciler (id,isim) VALUES ('3456','Serdar');

SELECT  * FROM ogrenciler;


-- ORNEK2 UNIQUE
--tedarikciler olusturalý, id unique olsun

CREATE TABLE tedarikciler
(
id char(4) UNIQUE,
isim varchar(50),
adres varchar(100),
tarih date

);

INSERT INTO tedarikciler VALUES ('1234','Ayse','mehmet mh. Ýzmir','13.03.2022');
INSERT INTO tedarikciler VALUES ('1234','Fatma','veri mh. Ýstanbul','13.05.2022');--unýque olduðunda tekrarlý id e izin vermez
INSERT INTO tedarikciler VALUES ('null','can','veri mh. Ankara','13.07.2022');

DROP TABLE tedarikciler;
SELECT * FROM   tedarikciler;

--ornek3 primary key

CREATE TABLE personel (
id char(5) PRIMARY KEY,
isim VARCHAR(50) UNIQUE,
maas NUMBER(5) NOT NULL,
ise_baslama date

);

INSERT INTO personel VALUES('10001','Ahmet Aslan',7000,'13.05.2012');
INSERT INTO personel VALUES('10001','Ali Veli',12000,'13.05.2013');--ÝD AYNI OLAMAZ HATA ALIR
INSERT INTO personel VALUES('10002','Murat Arý',10000,'13.05.2014');
INSERT INTO personel VALUES('NULL','Serdar Can',NULL,'13.05.2015');--NULL OLMAZ,HATA VERÝR

SELECT *FROM personel;


--primary key alternatif yontem
--bu yontemde kýsýtlamaya istedigimiz ismi atayabiliriz

CREATE TABLE CALISANLAR(
id char(5),
ÝSÝM VARCHAR(50) UNIQUE,
maas number(5) NOT NULL,
CONSTRAINT id_primary PRIMARY KEY(id)
);

INSERT INTO calisanlar VALUES('10001','Ahmet',7000);
INSERT INTO calisanlar VALUES('10002','Mehmet',9000);
INSERT INTO calisanlar VALUES('10003','Ali',11000);

SELECT * FROM calisanlar;

--bir tabloya veri eklerken constraint lere dikkat edilmelidir.

--ornek4 foreing key

CREATE TABLE adresler(
adres_id char(5),
sokok varchar(30),
cadde varchar(30),
sehir varchar(20),
CONSTRAINT id_foreing FOREIGN KEY(adres_id) REFERENCES calisanlar(id) --adresler ile calisanlari baðladý--adresler child

);

INSERT INTO adresler VALUES ('10001','Mutlu sokak','40.cadde','IST');
INSERT INTO adresler VALUES ('10001','Can sokak','50.cadde','ANK');
INSERT INTO adresler VALUES ('10002','Aga sokak','30.cadde','ÝZM');
INSERT INTO adresler VALUES ('','Aga sokak','30.cadde','Antep');
INSERT INTO adresler VALUES ('','Aga sokak','30.cadde','Antep');

--INSERT INTO adresler VALUES ('10004','Gel sokak','60.cadde','VAN');--PAREN TA OLMAYAN ÝD YÝ GÝREMEYÝZ

SELECT * FROM calisanlar;--parent
SELECT * FROM adresler;--child
--satýrý silmek istersek önce child i silmemiz gerekir.

--ogrencile2 tablosonu olusturun ve id,isim hanelerinin birlesimini primary key yapýn

CREATE TABLE ogrenciler2(
id char(4),
isim varchar(20),
not_ort number(5,2),
kayit_tarihi date,
CONSTRAINT ogrenciler2_primary PRIMARY KEY(id,isim)
);

INSERT INTO ogrenciler2 VALUES(null,'Ahmet Aslan',90.6,'13.05.2012');
INSERT INTO ogrenciler2 VALUES(1234,null,90.6,'13.05.2013');
INSERT INTO ogrenciler2 VALUES(1234,'Murat Arý',90.6,'13.05.2014');
INSERT INTO ogrenciler2 VALUES(1234,'Serdar Can',90.6,'13.05.2015');
INSERT INTO ogrenciler2 VALUES(1234,'Ahmet Aslan',90.6,'13.05.2012');

SELECT * FROM ogrenciler2;

--“tedarikciler4” isimli bir Tablo olusturun. Icinde “tedarikci_id”, “tedarikci_isim”, “iletisim_isim” field’lari olsun.
--“tedarikci_id” ve “tedarikci_isim” fieldlarini birlestirerek Primary Key olusturun.
--“urunler2” isminde baska bir tablo olusturun.Icinde “tedarikci_id” ve “urun_id” fieldlari olsun.
--“tedarikci_id” ve “urun_id” fieldlarini birlestirerek Foreign Key olusturun

CREATE TABLE tedarikciler4 (
tedarikci_id char(4),
tedarikci_ismi varchar(20),
iletisim_ismi varchar(20),
CONSTRAINT tedarikciler4_pk PRIMARY KEY (tedarikci_id,tedarikci_ismi)
);

CREATE TABLE urunler2 (
redarikci_id char(4),
urun_id varchar(5),
CONSTRAINT urunler2_fk FOREIGN KEY (redarikci_id,urun_id) REFERENCES Tedarikciler4
);

----CHECK CONSTRAINT-----
CREATE TABLE sehirler2 (	
    alan_kodu CHAR(3 ),
	isim VARCHAR2(50),
	nufus NUMBER(8,0) CHECK (nufus>1000)
    );
    INSERT INTO sehirler2 VALUES ('312','Ankara',5750000);
    INSERT INTO sehirler2 VALUES ('232','izmir',375); -- ORA-02290: check constraint (HR.SYS_C007028) violated
    INSERT INTO sehirler2 VALUES ('232','izmir',3750000);
    INSERT INTO sehirler2 VALUES ('436','Maras',null);











